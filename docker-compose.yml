version: '3.8'

networks:
  microservices-net:

services:

  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'
    networks:
      - microservices-net

  kafka:
    image: 'confluentinc/cp-kafka:latest'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - '9092:9092'
    networks:
      - microservices-net

  eureka-server:
    image: 'springcloud/eureka:latest'
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - microservices-net

  stock-service:
    build:
      context: .
      dockerfile: ./stock-service/Dockerfile
    container_name: stock-api
    depends_on:
      - stock-db
      - kafka
      - eureka-server
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD="admin"
      - SPRING_DATASOURCE_URL=jdbc:postgresql://stock-db:5432/stock-db
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

    ports:
      - "8080:8080"
    networks:
      - microservices-net

  stock-db:
    image: postgres:latest
    container_name: stock-db
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=stock-db
    ports:
      - "5432:5432"
    networks:
      - microservices-net

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - microservices-net
    environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: password
        MONGO_INITDB_DATABASE: product-service
    volumes:
      - ./data:/data/db